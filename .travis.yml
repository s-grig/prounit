os:
  - linux
  

language: cpp
compiler:
 - gcc
 - clang
dist: bionic

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - sourceline: "ppa:beineri/opt-qt-5.14.1-bionic"
      
    packages:
      - gcc-7
      - g++-7
      - clang-5.0
     
env:
   
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
  - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
  #- TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
  #- TARGET_CPU=x86 BUILD_CONFIGURATION=Release      
  
before_install:
  - sudo apt-get update -qq
  

script:
  - echo "$HOME"
  # Check versions of gcc, g++ and cmake
  - gcc -v && g++ -v && cmake --version
  - echo $PATH
 ######################### Qt5 #####################################
  #- sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo apt-get update
  - sudo apt-get install libqt5webkit5-dev qtdeclarative5-dev -y
  #- export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
  - sudo apt install qt5-default -y
  - sudo apt-get install libgtk2.0-dev -y
  - sudo apt-get install autoconf automake libtool
   #- sudo apt-get install pkg-config
  - sudo apt-get install libpng-dev
  - sudo apt-get install libjpeg8-dev
  - sudo apt-get install libtiff5-dev
  - sudo apt-get install zlib1g-dev
  - sudo apt-get install libtool-bin
    ########################### SFML ################################
  - sudo apt-get install libx11-dev libgl1-mesa-dev 
  - sudo apt-get install libudev-dev libfreetype6-dev 
  - sudo apt-get install libopenal-dev libflac-dev libvorbis-dev
  - sudo aptitude install x11-xserver-utils -y
  - sudo apt install libavcodec-dev libavformat-dev libswscale-dev -y
  - sudo apt-get install xorg-dev -y

########################### leptonica + tesseract #######################
  
  - sudo apt-get install xzgv
  - sudo apt-get install libicu-dev
  - sudo apt-get install libpango1.0-dev
  - sudo apt-get install libcairo2-dev
  - sudo apt install libtesseract-dev libleptonica-dev liblept5
  - sudo apt install tesseract-ocr -y
  - tesseract --version
    
  ######################## SFML #########################################
  - mkdir sfml
  - cd sfml
  - wget https://www.sfml-dev.org/files/SFML-2.5.1-sources.zip
  - unzip SFML-2.5.1-sources.zip
  - cd SFML-2.5.1
  - cmake -DCMAKE_BUILD_TYPE=release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=ON -DARCHIVE_INSTALL_DIR=. -G "Unix Makefiles"
  - sudo make && sudo make install
  - cd ..
  - cd ..
  - ls

  #####Gtest#####
  #- wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
  #- tar xf release-1.8.0.tar.gz
  #- cd googletest-release-1.8.0
  #- cmake -DBUILD_SHARED_LIBS=ON .
  #- make
  #- cd ..
  #- sudo apt-get install libgtest-dev
  #- cd /usr/src/googletest/googletest
  #- sudo mkdir build
  #- cd build
  #- sudo cmake ..
  #- sudo make
  #- sudo cp libgtest* /usr/lib/
  #- cd ..
  #- sudo rm -rf build
  #- sudo mkdir /usr/local/lib/googletest
  #- sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
  #- sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a
  - cd /home/travis/build/AntonGrigorev/KP
  ######################## build main ###################################  
  #- mkdir build && cd build
  #- cmake ..
  #- cmake --build . --config Release
  #- echo "Main application testing is done"
  ############################################################################
    # Build main and tests
    ############################################################################
  - mkdir -p build
  - cd build
  - cmake -DBUILD_TESTS=ON .. 
  - make
  - make project1_coverage
  - ctest